%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
以下代码用于实现对图形图像的行程编码压缩
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 利用imread函数在MATLAB路径中读取一个名为a.jpg的图片
rgb=imread('a.jpg');
% 利用rgb2gray函数将原有的RGB类型的图片转换成灰度图片
I=rgb2gray(rgb);
% 利用矩阵[m m]来存储灰度图片像素的大小
[m n]=size(I);
% 初始化矩阵J，用于保存压缩后的图片
J=[];
%------------------ 主循环：用于行程编码的实现 ---------------------
% 主循环开始
for i=1:m
	% 读取源图片中位于第一行i处的图像的值（外循环）
value=I(i,1);
% 初始化参数num，该参数用于记录具有同样像素点的个数
num=1;
% 进行列循环
for j=2:n
	% 如果I（i，j）的像素点与第一点的像素值相同，则num加1
        if I(i,j)==value
            num=num+1;
        else 
		% 如果I（i，j）的像素点与第一点的像素值不同，则重新初始化参数num，且进入下一个像素点的对比
            J=[J,num,value];
            num=1;
            value=I(i,j);
        end
end
% 循环结束后得到的压缩后的图片像素信息
    J=[J num value 0 0];
end

% ------------------------ 图片压缩前后的对比 ------------------------
% 查看图片在压缩前的像素信息
disp('源图像大小');
whos('I');
% 查看图片在压缩后的像素信息
disp('压缩图像大小')
whos('J');
