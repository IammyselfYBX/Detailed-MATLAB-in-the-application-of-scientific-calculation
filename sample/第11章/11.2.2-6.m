%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 以下代码用于使用firls函数和remez函数分别设计FIR滤波器,
% 查看两个滤波器的频率响应曲线的差别
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 参数n用于设置滤波器的阶数
n=30;
% 参数f用于设计滤波器的边带频率点分别为0,0.4*pi,0.5*pi,pi
f=[0 0.4 0.5 1];
% 参数a用于设计滤波器在各个边带频率点的幅值，分别为1,1,0,0
a=[1 1 0 0];

%%%%%%%%%%%%%%%% 以下代码用于通过firls函数设计FIR滤波器 %%%%%%%%%%%%%%%%%
% 使用firls函数生成FIR滤波器，参数n为滤波器的阶数；参数f为滤波器的边带频率点；参数a为滤波器在各个频率点的幅值；并返回滤波器的系数b，其中参数b为复数形式
b=firls(n,f,a);
% 根据滤波器的系数来求解系统的频率响应。参数b为设计滤波器的系数；参数h是一个复数的形式，表征系统的频率响应
[h,w]=freqz(b);

%%%%%%%%%%%%%%%% 以下代码用于通过remez函数设计FIR滤波器 %%%%%%%%%%%%%%%%%
% 使用remez函数生成FIR滤波器，参数n为滤波器的阶数；参数f为滤波器的边带频率点；参数a为滤波器在各个频率点的幅值；并返回滤波器的系数b，其中参数b为复数形式
bb=remez(n,f,a);
% 根据滤波器的系数来求解系统的频率响应。参数b为设计滤波器的系数；参数hh是一个复数的形式，表征系统的频率响应
[hh,w]=freqz(bb);

%%%%%%%%%%%%%%% 以下代码用于绘制两种FIR滤波器的频率响应曲线 %%%%%%%%%%%%%%%
% 绘制两个滤波器的频率响应曲线。
%参数w/pi,abs(h)用于绘制第一个滤波器的频率响应曲线，abs(h)用于求解频率响应中的模；
%参数w/pi,abs(hh)用于绘制第一个滤波器的频率响应曲线，abs(h)用于求解频率响应中的模；
plot(w/pi,abs(h),'bo',w/pi,abs(hh),'r+');
% 为图形的坐标轴添加坐标节点
axes('position',[0.2 0.2 0.5 0.5]);
% 为曲线横坐标添加标题'frequency(pi)'
xlabel('frequency(pi)');
% 为曲线纵坐标添加标题'magnitude'
ylabel('magnitude');
% 为曲线添加标题'Direct IIR design yulewalk'
title('Direct IIR design yulewalk');
% 对曲线图形中的不同线型进行标注
legend('firls','remez');
% 生成网格图
grid
% 得到如图11-10所示的图形
